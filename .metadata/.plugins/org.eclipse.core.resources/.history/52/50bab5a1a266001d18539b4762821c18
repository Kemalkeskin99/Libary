package kemalkeskin.libary.webApi;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


import kemalkeskin.libary.business.abstracts.BookService;
import kemalkeskin.libary.entities.concretes.Book;


@RestController
@RequestMapping("/api/books")


public class BooksController {
	
	private BookService bookService;
	
	
	
	public BooksController(BookService bookService) {
		
		this.bookService = bookService;
	}
	@GetMapping
	public ResponseEntity<List<Book>>getAll(){
		
		List<Book>book=bookService.getAll();
		if(book.isEmpty()) {
			return ResponseEntity.notFound().build();
			
		}
		return new  ResponseEntity<>(book,HttpStatus.OK);
	
	}
	
	@PostMapping
	public ResponseEntity<Book>add(@RequestBody Book book){
		
		Book bookadd=bookService.add(book);
		if(Objects.nonNull(bookadd)) {
			return new ResponseEntity<>(bookadd,HttpStatus.OK);
		}	
		return ResponseEntity.badRequest().build();
	}
	
	@PutMapping("/{id}")
	public ResponseEntity<Book>update(@RequestParam int id,@RequestBody Book book){
		Book bookupdate=bookService.Update(book,id);
		if(Objects.isNull(bookupdate)) {
			return ResponseEntity.notFound().build();
		}
		return new ResponseEntity<Book>(bookupdate,HttpStatus.OK);
	}
	
	public void delete(int id) {
		bookService.delete(id);
	}
	
}
