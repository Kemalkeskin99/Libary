package kemalkeskin.libary.webApi;

import java.util.List;
import java.util.Objects;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import kemalkeskin.libary.business.abstracts.AuthorService;
import kemalkeskin.libary.entities.concretes.Author;
import kemalkeskin.libary.entities.concretes.Book;
import lombok.AllArgsConstructor;
import lombok.Data;

@RestController
@RequestMapping("/api/authors")
@Data
@AllArgsConstructor

public class AuthorsController {
	
	private AuthorService authorService;
	
	@GetMapping
	public ResponseEntity<List<Author>>getAll(){
		
		List<Author>author=authorService.getAll();
		if(author.isEmpty()) {
			return ResponseEntity.notFound().build();
			
		}
		return new  ResponseEntity<>(author,HttpStatus.OK);
	
	}
	
	@PostMapping
	public ResponseEntity<Author>add(@RequestBody Author author){
		
		Author authoradd=authorService.add(author);
		if(Objects.nonNull(authoradd)) {
			
			return new ResponseEntity<Author>(authoradd,HttpStatus.OK);
		}	
		return ResponseEntity.badRequest().build();
	}
	
	@PutMapping("/{id}")
	public ResponseEntity<Author>update(@RequestParam int id,@RequestBody Author author){
		Author authorupdate=authorService.Update(author,id);
		if(Objects.isNull(authorupdate)) {
			return ResponseEntity.notFound().build();
		}
		return new ResponseEntity<Author>(authorupdate,HttpStatus.OK);
	}
	
	@DeleteMapping("/{id}")
	public void delete(@ RequestParam int id) {
		bookService.delete(id);
	}

}
